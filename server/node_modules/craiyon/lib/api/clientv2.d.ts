import CraiyonOutput from '../models/CraiyonOutput';
/**
 * Contains the options for a Craiyon image generation request.
 *
 * @typedef {Object} CraiyonOptions
 * @property {string} [prompt] The prompt to generate an image for.
 * @property {number?} [maxRetries] The maximum number of retries to attempt.
 */
export interface CraiyonGenerateRequestOptions {
    prompt: string;
    maxRetries?: number;
}
/**
 * @api public
 * @class CraiyonClient
 * @classdesc An API client for Craiyon.
 */
declare class Client {
    static GENERATE_IMAGES_URL: string;
    static VERSION: number;
    private baseUrl;
    private maxRetries;
    private apiToken?;
    private modelVersion;
    constructor();
    /**
     * A builder function that sets the base URL of the Craiyon backend instance.
     *
     * @param baseUrl The base URL to use. Must not include the `/draw`
     *                endpoint.
     * @returns {CraiyonClient} The modified client instance.
     */
    withBaseUrl(baseUrl: string): Client;
    /**
     * A builder function that sets the maximum number of retries to attempt.
     *
     * @param maxRetries The maximum number of retries to attempt.
     * @returns {CraiyonClient} The modified client instance.
     */
    withMaxRetries(maxRetries: number): Client;
    /**
     * A builder function that sets the model version.
     *
     * @param modelVersion The craiyon model to use.
     * @returns {CraiyonClient} The modified client instance.
     */
    withModelVersion(modelVersion: string): Client;
    /**
     * A builder function that sets the model version.
     *
     * @param modelVersion The craiyon model to use.
     * @returns {CraiyonClient} The modified client instance.
     */
    withApiToken(apiToken: string): Client;
    /**
     * Generates an image for the given prompt. The retries will be throttled by
     * 10 seconds if an HTTP Too Many Requests error is returned.
     *
     * @param {CraiyonOptions} options The options to use for the request.
     * @returns {Promise<CraiyonOutput>} A promise that resolves to the output of
     *                                   the image generation.
     * @throws {Error} If the request fails after the maximum number of retries.
     */
    generate({ prompt, maxRetries, }: CraiyonGenerateRequestOptions): Promise<CraiyonOutput>;
    private makeGenerateImagesUrl;
}
export default Client;
