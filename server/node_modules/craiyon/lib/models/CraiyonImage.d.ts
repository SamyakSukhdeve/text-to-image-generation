/// <reference types="node" />
/// <reference types="node" />
import * as fs from 'fs';
/**
 * @api public
 * @class CraiyonImage
 * @classdesc Represents a single image from a Craiyon image generation output.
 */
declare class CraiyonImage {
    private base64;
    /**
     * @constructor
     * @param {string} base64 The base64-encoded image data.
     */
    constructor(base64: string);
    /**
     * Will return the base64 representation of the image.
     *
     * @returns {string} The base64-encoded string.
     */
    asBase64(): string;
    /**
     * Will create a buffer from the base64 representation of the image.
     *
     * @returns {Buffer} The buffer containing the image data.
     */
    asBuffer(): Buffer;
    /**
     * Will write the image to the given path asynchronously.
     *
     * @param {string} path The path to write the image to.
     */
    saveToFile(path: string): Promise<void>;
    /**
     * Will write the image to the given path synchronously.
     *
     * @param {string} path The path to write the image to.
     */
    saveToFileSync(path: string): void;
    /**
     * Will create a read stream from the image.
     *
     * @returns {Readable} The readable stream.
     */
    stream(): fs.ReadStream;
}
export default CraiyonImage;
